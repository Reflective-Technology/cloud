include:
- project: zuso-rd-team/gitlab-ci-templates
  file:
  - base-sec-report.yml
  - common.yml

unit-test:
  image: "${DOCKER_REGISTRY}/golang:1.22-alpine3.20"
  stage: test
  needs: []
  dependencies: []
  extends:
  - ".normal-not-cron"
  variables:
    APK_CACHE_DIR: $CI_PROJECT_DIR/.cache/apk
    GOPATH: $CI_PROJECT_DIR/.go
  cache:
    key: "unit-test"
    paths:
      - .go/pkg/mod/
      - $APK_CACHE_DIR
  script:
  - mkdir -p .go
  - mkdir -p $APK_CACHE_DIR
  - apk update --cache-dir $APK_CACHE_DIR
  - apk add --cache-dir $APK_CACHE_DIR build-base
  - go install gotest.tools/gotestsum@latest
  - .go/bin/gotestsum --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: report.xml
  tags:
  - container

lint-test:
  image: "${DOCKER_REGISTRY}/golangci/golangci-lint:latest-alpine"
  stage: test
  needs: []
  dependencies: []
  extends:
  - ".go-cache"
  - ".normal-not-cron"
  script:
  - golangci-lint run . --timeout 5m
  tags:
  - container

release-change-log:
  image: registry.cybereyes.ai:5443/docker/alpine:3
  stage: build
  cache:
    key: "cache"
    paths:
      - $APK_CACHE_DIR
  artifacts:
    paths:
      - release_notes.md
    expire_in: 1 week
    reports:
      # export the environment statement so we can access it in the release stage
      dotenv: CI_JOB_ID.env
  script:
    - mkdir -p $APK_CACHE_DIR
    - apk update --cache-dir $APK_CACHE_DIR
    - apk add --cache-dir $APK_CACHE_DIR jq curl ca-certificates
    - cp /etc/gitlab-runner/certs/ca.crt /usr/local/share/ca-certificates/ca.crt
    - update-ca-certificates --fresh
    - echo BUILD_JOB_ID=$CI_JOB_ID >> CI_JOB_ID.env
    - |
      curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" \
      "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" \
      | jq -r .notes > release_notes.md
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  tags:
    - container

release_job:
  stage: deploy
  image: $CI_REGISTRY/gitlab/gitlab-org/release-cli:latest
  needs:
    - job: release-change-log
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'